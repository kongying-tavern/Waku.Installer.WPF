<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Styles  -->
    <!--  Button Styles  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonColor.FocusedBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonColor.PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  SkinButton  -->
    <Style x:Key="SkinButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{DynamicResource SkinIconImage}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="8,0,0,0" />
        <Setter Property="Width" Value="32" />
    </Style>
    <!--  MinimizeButton  -->
    <Style x:Key="MinimizeButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{DynamicResource MinimizeIcon}" Stretch="None" />
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="8,0,0,0" />
        <Setter Property="Width" Value="32" />
    </Style>
    <!--  CloseButton  -->
    <Style x:Key="CloseButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{DynamicResource CloseIcon.Default}" Stretch="None" />
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="8,0,0,0" />
        <Setter Property="Width" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseButtonColor.FocusedBrush}" />
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="{DynamicResource CloseIcon.Focused}" Stretch="None" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseButtonColor.PressedBrush}" />
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="{DynamicResource CloseIcon.Default}" Stretch="None" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  PrimaryButton  -->
    <Style x:Key="PrimaryButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor.DefaultBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="12,0,12,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor.FocusedBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor.PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PrimaryButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonFontColorBrush}" />
        <Setter Property="LineHeight" Value="17.24" />
        <Setter Property="Margin" Value="16,8,16,7" />
    </Style>
    <!--  SecondButton  -->
    <Style x:Key="SecondButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource SecondButtonColor.DefaultBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="12,0,12,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource SecondButtonBorderColorBrush}"
                            BorderThickness="2" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="SecondButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource SecondButtonFontColorBrush}" />
        <Setter Property="LineHeight" Value="17.24" />
        <Setter Property="Margin" Value="14,6,14,5" />
    </Style>
    <!--  Image Styles  -->
    <Style x:Key="BannerImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource BannerImage}" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    <Style x:Key="StarImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource ResourceKey=Star}" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    <Style x:Key="RectangleBarStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource ResourceKey=RectangleBar}" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    <Style x:Key="BgImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="404" />
        <Setter Property="Margin" Value="0,0,25,0" />
        <Setter Property="Source" Value="{DynamicResource BgImage}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Width" Value="345" />
    </Style>
</ResourceDictionary>