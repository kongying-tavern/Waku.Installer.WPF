// // Copyright (c) Microsoft. All rights reserved.
// // Copyright (c) PeaceShi. All rights reserved.
// // Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using System.Collections.Generic;
using System.Windows;

namespace WpfApp;

/// <summary>
///     App derives from Application to inherit application services,
///     and because developers typically need to influence its behavior
///     such as handling events or overriding members. The most common
///     reason is to configure the default UI resource to load, which
///     App does by overriding Startup.
///     NOTE: Since App is code-only (no markup) there is no need to
///     call the InitializeComponent method eg:
///     public partial class App : Application {
///     public App() {
///     this.InitializeComponent();
///     }
///     }
///     InitializeComponent is a method that is generated by the compiler
///     when markup  exists to apply the App XAML to the actual App instance,
///     eg to register event handlers. If XAML were used, this class
///     would also need to be a partial class, to merge with the
///     partial class definition that implements the InitializeComponent,
///     method that's generated by the compiler.
/// </summary>
public class App : Application
{
    protected override void OnStartup(StartupEventArgs e)
    {
        base.OnStartup(e);

        SkinsLoader();

        // Show main application window.
        // NOTE: this window is automatically set as
        //       App.Current.MainWindow and App.Current.Windows[0]
        MainWindow window = new();
        window.Show();
    }

    private void SkinsLoader()
    {
        List<string> lightSkins = new() { "Skins/Icons.xaml", "Skins/Styles.xaml", "Skins/LightSkin.xaml" };
        List<string> darkSkins = new() { "Skins/Icons.xaml", "Skins/Styles.xaml", "Skins/DarkSkin.xaml" };
        // New key will replace old key.
        ResourceDictionary lightSkinResourceDictionary = new();
        // LoadComponent is NOT thread safe.
        MergedDictionaries(lightSkinResourceDictionary, lightSkins);
        // New key will replace old key.
        ResourceDictionary darkSkinResourceDictionary = new();
        // LoadComponent is NOT thread safe.
        MergedDictionaries(darkSkinResourceDictionary, darkSkins);
        // Set resources to app properties.
        Properties[GlobalVars.LightSkin] = lightSkinResourceDictionary;
        Properties[GlobalVars.DarkSkin] = darkSkinResourceDictionary;
    }

    private static void MergedDictionaries(ResourceDictionary resDic, List<string> dicNames)
    {
        foreach (string dicName in dicNames)
        {
            resDic.MergedDictionaries.Add(
                (ResourceDictionary)LoadComponent(new Uri(dicName, UriKind.Relative)));
        }
    }
}